const fs = require('fs')

var args = process.argv.slice(2);

const testFolder = args[0];

var clearname = function(file){
	file = file.replace(/[áàãâä]/g, 'a');
  file = file.replace(/[éèêë]/g, 'e');
  file = file.replace(/[íìîï]/g, 'i');
  file = file.replace(/[óòõôö]/g, 'o');
  file = file.replace(/[úùûü]/g, 'u');
  file = file.replace(/[ÁÀÃÂ]/g, 'a');
  file = file.replace(/[éèêë]/g, 'e');
  file = file.replace(/[íìîï]/g, 'i');
  file = file.replace(/[óòõôö]/g, 'o');
  file = file.replace(/[úùûü]/g, 'u');
  file = file.replace(/[ç]/g, 'c');
	file = file.replace(/[^a-zA-Z0-9-.]/g, ' ');
  file = file.replace(/_+/, '_');
  return file;
}
function replaceDiacritics(str){

  var diacritics = [
    {char: 'A', base: /[\300-\306]/g},
    {char: 'a', base: /[\340-\346]/g},
    {char: 'E', base: /[\310-\313]/g},
    {char: 'e', base: /[\350-\353]/g},
    {char: 'I', base: /[\314-\317]/g},
    {char: 'i', base: /[\354-\357]/g},
    {char: 'O', base: /[\322-\330]/g},
    {char: 'o', base: /[\362-\370]/g},
    {char: 'U', base: /[\331-\334]/g},
    {char: 'u', base: /[\371-\374]/g},
    {char: 'N', base: /[\321]/g},
    {char: 'n', base: /[\361]/g},
    {char: 'C', base: /[\307]/g},
    {char: 'c', base: /[\347]/g}
  ]

  diacritics.forEach(function(letter){
    str = str.replace(letter.base, letter.char);
  });
  
	str = str.replace(/[^a-zA-Z0-9-.]/g, ' ');
  str = str.replace(/_+/, '_');

  return str;
};

if (fs.existsSync(testFolder)) {
  fs.readdir(testFolder, (err, files) => {
    files.forEach(file => {
      //console.log(file + ' >> ' + replaceDiacritics(file) );
      fs.rename(testFolder+'\\'+file, testFolder+'\\'+replaceDiacritics(file) , (err) =>{
        if(err) console.log(err)
      } )
    });
    console.log('END')
  });
}else{
  console.log('Folder not exists')
}

console.log('folder ', args[0])
